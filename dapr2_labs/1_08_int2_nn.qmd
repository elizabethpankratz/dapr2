---
title: "Interactions I: Num x Cat & Num x Num"
link-citations: yes
params: 
    SHOW_SOLS: TRUE
    TOGGLE: TRUE
editor_options: 
  chunk_output_type: console
---


```{r setup, include=FALSE}
source('assets/setup.R')
library(tidyverse)
set.seed(953)
```

:::lo
### <i class="fa fa-graduation-cap"></i> Learning Objectives
At the end of this lab, you will:

1. Understand the concept of an interaction.
2. Be able to interpret the meaning of a numeric $\times$ numeric interaction.
3. Understand the principle of marginality and why this impacts modelling choices with interactions.
4. Visualize and probe interactions.

### <i class="fa fa-check-square-o fa-2"></i> What You Need

You will need to have completed [Lab X]. 

### <i class="fab fa-r-project"></i> Required R Packages
Remember to load all packages within a code chunk at the start of your RMarkdown file using `library()`. If you do not have a package and need to install, do so within the console using `install.packages(" ")`. For further guidance on installing/updating packages, see Section C [here](https://uoepsy.github.io/files/install-update-r#update-pkgs). 

For this lab, you will need to load the following package(s):

* **tidyverse** 
* **psych** 
* **sjPlot**
* **patchwork** 
* **kableExtra**
* **plotly**
* **pander**
* **sandwich**
* **interactions**

### <i class="fa fa-file"></i> Lab Data
You can download the data required for this lab [here](https://uoepsy.github.io/data/scs_study.csv) or read it in via this link https://uoepsy.github.io/data/scs_study.csv. 

:::

# Setup

`r qbegin("Setup", qlabel = FALSE)`  

1. Create a new RMarkdown file
2. Load the required package(s)
3. Read the scs_study dataset into R, assigning it to an object named `scs_study 
 
`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
```{r message=FALSE}
#Loading the required package(s)
library(tidyverse)
library(psych)
library(sjPlot)
library(patchwork)
library(kableExtra) 
library(plotly)
library(pander)
library(sandwich)
library(interactions)

#Reading in data for Part B and storing in object named 'scs_study'
scs_study <- read_csv("https://uoepsy.github.io/data/scs_study.csv")
```
`r solend()`

# Study Overview 

> **Research Question** 

> Does the effect of social comparison on symptoms of depression, anxiety and stress vary depending on level of Neuroticism?

Previous research has identified an association between an individual's perception of their social rank and symptoms of depression, anxiety and stress. We are interested in the individual differences in this association. 

To investigate whether the effect of social comparison on symptoms of depression, anxiety and stress varies depending on level of Neuroticism, we will need to fit a multiple regression model with an interaction term. Before we think about fitting our model, it is important that we understand the data available - how many participants? What type (or class) of data will we be working with? What was the measurement scale? How were scales scored? Look at the social comparison study data codebook below. 


`r optbegin("Social Comparison Study data codebook", olabel=FALSE,toggle=params$TOGGLE)`  


__Description__

Data from 656 participants containing information on scores on each trait of a Big 5 personality measure, their perception of their own social rank, and their scores on a measure of depression.  

The data in `scs_study.csv` contain seven attributes collected from a random sample of $n=656$ participants: 

- `zo`: Openness (Z-scored), measured on the Big-5 Aspects Scale (BFAS)
- `zc`: Conscientiousness (Z-scored), measured on the Big-5 Aspects Scale (BFAS)
- `ze`: Extraversion (Z-scored), measured on the Big-5 Aspects Scale (BFAS)
- `za`: Agreeableness (Z-scored), measured on the Big-5 Aspects Scale (BFAS)
- `zn`: Neuroticism (Z-scored), measured on the Big-5 Aspects Scale (BFAS)
- `scs`: Social Comparison Scale - An 11-item scale that measures an individualâ€™s perception of their social rank, attractiveness and belonging relative to others. The scale is scored as a sum of the 11 items (each measured on a 5-point scale), with higher scores indicating more favourable perceptions of social rank.
- `dass`: Depression Anxiety and Stress Scale - The DASS-21 includes 21 items, each measured on a 4-point scale. The score is derived from the sum of all 21 items, with higher scores indicating higher a severity of symptoms.  

__Preview__

The first six rows of the data are:


```{r echo=FALSE, message=FALSE}
read_csv('https://uoepsy.github.io/data/scs_study.csv') %>% head %>% gt::gt()
```

`r optend()`

## Exercises 

`r qbegin(1)`

Formally state:

- a linear model to investigate whether the effect of social comparison on symptoms of depression, anxiety and stress varies depending on level of Neuroticism
- your chosen significance level
- the null and alternative hypotheses

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

$$
{DASS-21 Score} = \beta_0 + \beta_1 \cdot SCS Score + beta_2 \cdot Neuroticism  + \beta_3 \cdot (SCS Score \cdot Neuroticism) 
$$ 
Effects will be considered statistically significant at $\alpha=.05$

Our hypotheses are:

$H_0: \beta_3 = 0$

The effect of social comparison on symptoms of depression, anxiety and stress does not vary depending on level of Neuroticism

$H_1: \beta_3 \neq 0$

The effect of social comparison on symptoms of depression, anxiety and stress does vary depending on level of Neuroticism.

`r solend()`

<br>

`r qbegin(2)`

 Produce plots of the relevant distributions and associations involved in the research question.
 
 Interpret these plots in the context of the study.
 
`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
ggplot(data = scs_study, aes(x=dass)) + 
  geom_density() + 
  geom_boxplot(width = 1/50) +
  labs(title="Marginal distribution of DASS-21 Scores", 
       x = "Depression Anxiety and Stress Scale", y = "Probability density")
```

:::int 
The marginal distribution of scores on the Depression, Anxiety and Stress Scale (DASS-21) is unimodal with a mean of approximately `r round(mean(scs_study$dass))` and a standard deviation of `r round(sd(scs_study$dass))`. 
:::


```{r}
ggplot(data = scs_study, aes(x=scs)) + 
  geom_density() + 
  geom_boxplot(width = 1/50) +
  labs(title="Marginal distribution of Social Comparison Scale (SCS) scores", 
       x = "Social Comparison Scale Score", y = "Probability density")
```

:::int 
The marginal distribution of score on the Social Comparison Scale (SCS) is unimodal with a mean of approximately `r round(mean(scs_study$scs))` and a standard deviation of `r round(sd(scs_study$scs))`. There look to be a number of outliers at the upper end of the scale. 
:::


```{r}
ggplot(data = scs_study, aes(x=zn)) + 
  geom_density() + 
  geom_boxplot(width = 1/50) +
  labs(title="Marginal distribution of Neuroticism (Z-Scored)", 
       x = "Neuroticism (Z-Scored)", y = "Probability density")
```

:::int 
The marginal distribution of Neuroticism (Z-scored) is positively skewed, with the 25\% of scores falling below `r round(quantile(scs_study$zn, .25),2)`, 75\% of scores falling below `r round(quantile(scs_study$zn, .75),2)`.
:::


```{r, fig.width = 8, fig.height = 4, out.width = '90%'}
p1 <- ggplot(data = scs_study, aes(x=scs, y=dass)) + 
  geom_point()+
  labs(x = "SCS", y = "DASS-21")

p2 <- ggplot(data = scs_study, aes(x=zn, y=dass)) + 
  geom_point()+
  labs(x = "Neuroticism", y = "DASS-21")

p1 | p2

# the kable() function from the kableExtra package can make table outputs print nicely into html.
scs_study %>%
  select(dass, scs, zn) %>%
  cor() %>% 
  kable(digits = 2) %>%
  kable_styling(full_width = FALSE)
```

:::int
+ There is a weak, negative, association between scores on the Social Comparison Scale and scores on the Depression Anxiety and Stress Scale for the participants in the sample. Severity of symptoms measured on the DASS-21 tend to decrease, on average, the more favourably participants view their social rank.  
+ There is a weak, positive, association between the levels of Neuroticism and scores on the DASS-21. Participants who are more neurotic tend to, on average, display a higher severity of symptoms of depression, anxiety and stress.  
:::

`r solend()`

<br> 

`r qbegin(3)`
Run the code below. It takes the dataset, and uses the `cut()` function to add a new variable called "zn_group", which is the "zn" variable split into 4 groups.  

_Remember:_ we have to re-assign this output as the name of the dataset (the `scs_study <- ` bit at the beginning) to make these changes occur in our __environment__ (the top-right window of Rstudio). If we didn't have the first line, then it would simply print the output.  


```{r}
scs_study <-
  scs_study %>%
  mutate(
    zn_group = cut(zn, 4)
  )
```

We can see how it has split the "zn" variable by plotting the two against one another:  
(Note that the levels of the new variable are named according to the cut-points).

```{r}
ggplot(data = scs_study, aes(x = zn_group, y = zn)) + 
  geom_point()
```

Plot the association between scores on the SCS and scores on the DASS-21, _for each group of the variable we just created._  
How does the pattern differ? Does it suggest an interaction?  

**Tip:** Rather than creating four separate plots, you might want to map some feature of the plot to the variable we created in the data, or make use of `facet_wrap()`/`facet_grid()`.  

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r, fig.width = 8, fig.height = 4, out.width = '90%'}
ggplot(data = scs_study, aes(x = scs, y = dass, col = zn_group)) + 
  geom_point() + 
  facet_grid(~zn_group) +
  theme(legend.position = "none") # remove the legend
```

The association between SCS scores and DASS-21 scores appears to be different between these groups. For those with a relatively high Neuroticism score, the association seems stronger, while for those with a low Neuroticism score there is almost no discernable association. 
This suggests an interaction - the association of DASS-21 ~ SCS differs across the values of Neuroticism! 
`r solend()`

<br>

:::frame

Cutting one of the explanatory variables up into groups essentially turns a numeric variable into a categorical one. We did this just to make it easier to visualise how a an association differs across the values of another variable, because we can imagine a separate line for the association between SCS and DASS-21 scores for each of the groups of Neuroticism. However, in grouping a numeric variable like this we lose information. Neuroticism is measured on a continuous scale, and we want to capture how the association between SCS and DASS-21 differs across that continuum (rather than cutting it into chunks).   
We could imagine cutting it into more and more chunks (see Figure \@ref(fig:reglinescut)), until what we end up with is a an infinite number of lines - i.e., a three-dimensional plane/surface (recall that in for a multiple regression model with 2 explanatory variables, we can think of the model as having three-dimensions). The inclusion of the interaction term simply results in this surface no longer being necessarily flat. You can see this in Figure \@ref(fig:3dint). 
 
```{r reglinescut, echo=FALSE, fig.cap="Separate regression lines DASS ~ SCS for neuroticism when cut into 4 (left) or 6 (center) or 12 (right) groups", out.width="80%"}
p1 <- ggplot(data = scs_study, aes(x = scs, y = dass, col = zn_group)) + 
  geom_point(alpha=.1) + 
  stat_smooth(method="lm",se=FALSE)+theme(legend.position = "none")

scs_study %>%
  mutate(
    zn_group = cut(zn, 6)
  ) %>% ggplot(data = ., aes(x = scs, y = dass, col = zn_group)) + 
  geom_point(alpha=.1) + 
  stat_smooth(method="lm",se=FALSE)+theme(legend.position = "none") -> p2

scs_study %>%
  mutate(
    zn_group = cut(zn, 12)
  ) %>% ggplot(data = ., aes(x = scs, y = dass, col = zn_group)) + 
  geom_point(alpha=.1) + 
  stat_smooth(method="lm",se=FALSE)+theme(legend.position = "none") -> p3

p1 | p2 | p3
```


```{r include=FALSE, echo=FALSE}
fit<-lm(dass ~ scs*zn, data = scs_study)
steps=50
scs <- with(scs_study, seq(min(scs),max(scs),length=steps))
zn <- with(scs_study, seq(min(zn),max(zn),length=steps))
newdat <- expand.grid(scs=scs, zn=zn)
dass <- matrix(predict(fit, newdat), steps, steps)
p <- persp(scs,zn,dass, theta = -25,phi=5, col = NA)
```


```{r 3dint, echo=FALSE, fig.cap="3D plot of regression surface with interaction. You can explore the plot in the figure below from different angles by moving it around with your mouse.", fig.align = 'center', out.width = '90%'}

plot_ly(x=scs,y=zn,z=dass, type="surface") %>% layout(
    scene = list(
      xaxis = list(title = "SCS"),
      yaxis = list(title = "Neuroticism"),
      zaxis = list(title = "DASS-21")
    ))
```

:::

<br>

`r qbegin(4)`

Consider that Neuroticism has already been $z$-scored, but scs has not. 

Standardise the scs variable.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

Create mean centred variable for 'scs':

```{r}
# standardise scs score
scs_study <- 
  scs_study %>% 
    mutate(
      zscs = (scs-mean(scs))/sd(scs)
    )
```

`r solend()`

<br>

`r qbegin(5)`

Fit your model using `lm()`, and assign it as an object with the name "dass_mdl".   

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

When fitting a regression model in `R` with two explanatory variables A and B, and their interaction, these two are equivalent:  

+ y ~ A + B + A:B
+ y ~ A*B  

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#fit interaction model
dass_mdl <- lm(dass ~  zscs*zn, data = scs_study)

#check model output
summary(dass_mdl)
```

`r solend()`

<br>

`r qbegin(6)`

Interpret your coefficients in the context of the study.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

Recall that we can obtain our parameter estimates using various functions such as `summary()`,`coef()`, `coefficients()`, etc. 

```{r}
coefficients(dass_mdl)
```

+ $\beta_0$ = `(Intercept)` = `r round(coef(dass_mdl)[1],2)`
    - On plot: The point at which the blue line cuts the y-axis
    - Interpretation: The intercept, or predicted wellbeing score when the number of social interactions per week is 0, and when location is not rural.

+ $\beta_1$ = `scs` = `r round(coef(dass_mdl)[2],2)`
    - On plot: The slope (vertical increase on the y-axis associated with a 1 unit increase on the x-axis) of the blue line.
    - Interpretation: The simple slope of social interactions (number per week) for location reference group (not rural).

+ $\beta_2$ = `zn` = `r round(coef(dass_mdl)[3],2)`
    - On plot: The vertical distance from the blue to the red line _at the y-axis_ (where social_int = 0).  
    - Interpretation: The simple effect of location (or the difference in wellbeing scores between rural and non rural residents) when number of social interactions is 0. 

+ $\beta_3$ `scs:zn` = `r round(coef(dass_mdl)[4],2)`
    - On plot: How the slope of the line changes when you move from the blue to the red line. 
    - Interpretation: The interaction between social interactions (number per week) and location (rural/not rural) - the difference in the simple slopes of social interactions for rural vs non-rural residents. 


`r solend()`

<br>

`r qbegin(7)`

Using the `probe_interaction()` function from the interactions package, visualise the interaction effects from your model.

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

Make sure to give your plot informative titles/labels. You, for example, likely want to give your plot:

- a clear and concise title (specify `main.title = `)
- axis labels with units or scale included (specify `x.label = ` and `y.label = `)
- a legend title (specify `legend.main = `)

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r warning=FALSE, message=FALSE}
plt_rural_mod <- probe_interaction(model = dass_mdl, 
                  pred = zscs, 
                  modx = zn, 
                  cond.int = T,
                  interval = T, 
                  jnplot = T,
                  main.title = "Neuroticism moderating the effect of\nsocial comparison on depression and anxiety",
                  x.label = "Social Comparison Scale (Z-scored)",
                  y.label = "DASS-21 Scores",
                  legend.main = "Neuroticism (Z-scored)")
```

Let's look at our plot:

```{r}
#| label: fig-int-dass
#| fig-cap: "Predicted Wellbeing Scores across Social Interactions by Location"

plt_rural_mod$interactplot
```

`r solend()`

<br>

`r qbegin(8)`

Conduct a simple slopes analysis.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}

dass_mdl$simslopes$slopes

```

`r solend()`

<br>

`r qbegin(9)`

Provide key model results in a formatted table.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#| label: tbl-dass-modresults
#| tbl-cap: Regression table for DASS-21 model
#create table for results
tab_model(dass_mdl,
          dv.labels = "DASS-21 Scores",
          pred.labels = c("zscs" = "Social Comparison Scale (Z-scored)",
                          "zn" = "Neuroticism (Z-scored)",
                          "zscs:zn" = "Social Comparison Scale (Z-scored): Neutoricism (Z-scored)"),
          title = "Regression table for DASS-21 model")
```

`r solend()`

<br>


`r qbegin(10)`

Interpret your results in the context of the research question and report your model in full.

Make reference to the interaction plot and regression table.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

Make sure to write your results up following [APA guidelines](https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf):

::: {.callout-important icon=false appearance="minimal"}

Full regression results including 95% Confidence Intervals are shown in @tbl-dass-modresults. The $F$-test for model utility was significant $(F(3,652) = 48.50, p<.001)$, and the model explained approximately 17.87% of the variability in DASS-21 scores.

There was a significant conditional association between DASS-21 Scores and SCS scores (Z-scored) ($\beta$ = -1.57, SE = 0.24, $p$ < .001), suggesting that for those at the mean level of Neuroticism, scores on the DASS-21 decrease by 1.57 for every 1 standard deviation increase in SCS scores. 

A significant conditional association was also evident between DASS-21 Scores and Neuroticism (Z-scored) ($\beta$ = 1.58, SE = 0.24, $p$ <.001), suggesting that for those who score the mean on the SCS, scores on the DASS-21 increase by 1.58 for every 1 standard deviation increase in Neuroticism. 

The association between symptoms of depression and anxiety (DASS-21 scores) and social comparison was found to be dependent upon the level of Neuroticism, with a greater negative association between the two for those with high levels of Neuroticism ($\beta$ = -1.83, SE = 0.23, $p$ <.001). This interaction is visually presented in @fig-int-dass. 

Therefore, we have evidence to reject the null hypothesis (that the effect of social comparison on symptoms of depression, anxiety and stress does not vary depending on level of Neuroticism).

:::

`r solend()`















