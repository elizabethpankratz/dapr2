---
title: "More Logistic Regression"
link-citations: TRUE
params: 
    SHOW_SOLS: TRUE
    TOGGLE: TRUE
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
source('assets/setup.R')

set.seed(953)

library(DT)
library(pander)
library(sjPlot)
library(tidyverse)
library(car)

```

:::lo

### <i class="fa fa-graduation-cap"></i> Learning Objectives
At the end of this lab, you will:

1. Understand when to use a logistic model
2. Understand how to fit and interpret a logistic model
3. Understand how to evaluate model fit

### <i class="fa fa-check-square-o fa-2"></i> What You Need

1. Be up to date with lectures
2. Have completed previous lab exercises from [Semester 2 Week 7](https://uoepsy.github.io/dapr2/2324/labs/2_07_glm1.html)

### <i class="fab fa-r-project"></i> Required R Packages
Remember to load all packages within a code chunk at the start of your RMarkdown file using `library()`. If you do not have a package and need to install, do so within the console using `install.packages(" ")`. For further guidance on installing/updating packages, see Section C [here](https://uoepsy.github.io/files/install-update-r#update-pkgs). 

For this lab, you will need to load the following package(s):

* **tidyverse** 
* **patchwork**
* **kableExtra**
* **psych**
* **sjPlot**

### <i class="fa fa-pencil-square-o" aria-hidden="true"></i> Presenting Results
All results should be presented following [APA guidelines](https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf). If you need a reminder on how to hide code, format tables/plots, etc., make sure to review the [rmd bootcamp](https://uoepsy.github.io//rmd-bootcamp/).

The example write-up sections included as part of the solutions are **not perfect** - they instead should give you a good example of what information you should include and how to structure this. Note that you must **not** copy any of the write-ups included below for future reports - if you do, you will be committing plagiarism, and this type of academic misconduct is taken very seriously by the University. You can find out more [here](https://www.ed.ac.uk/academic-services/students/conduct/academic-misconduct).

### <i class="fa fa-file"></i> Lab Data
You can download the data required for this lab [here](https://uoepsy.github.io/data/QuitAttempts.csv) or read it in via this link https://uoepsy.github.io/data/QuitAttempts.csv 

:::

# Study Overview

> **Research Question**
>
> Is attempting to quit tobacco products associated with an individuals intentions?

`r optbegin("Smoking Codebook", olabel=FALSE, toggle=params$TOGGLE)` 

__Description__

Kalkhoran and colleagues (2015)[^1] investigated predictors of dual use of cigarettes and smokeless tobacco products. Although their original sample size was large ($n$ = 1324), they were interested in running separate logistic regression analyses within subgroups. Specifically, they were interested in one of the smaller subgroups that contained subjects who used both cigarettes and smokeless tobacco products ($n$=61).

__Data Dictionary__

```{r echo=FALSE, message=FALSE, warning=FALSE}
smoke <- read_csv("https://uoepsy.github.io/data/QuitAttempts.csv")
tibble(
variable = names(smoke),
description = c("Subject","Quit Attempt - Whether the subject made an attempt to quit using tobacco products (0 = no attempt to quit; 1 = attempted to quit).", "Intention to Quit - Individuals intention to quit (1 = Never intend to quit; 2 = May intend to quit but not in the next 6 months; 3 = Intend to quit in the next 6 months; 4 = Intend to quit in the next 30 days)")
) %>% gt::gt()
```

__Preview__

The first six rows of the data are:

```{r echo=FALSE, message=FALSE}
read_csv('https://uoepsy.github.io/data/QuitAttempts.csv') %>% head %>% gt::gt()
```

`r optend()`

<div class="divider div-transparent div-dot"></div>

# Setup

`r qbegin("Setup", qlabel = FALSE)`  

1. Create a new RMarkdown file
2. Load the required package(s)
3. Read in the QuitAttempts dataset into R, assigning it to an object named `smoke` 
 
`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r message=FALSE}
#load packages
library(tidyverse)
library(psych)
library(kableExtra)
library(patchwork)
library(sjPlot)

#read in data
smoke <- read_csv("https://uoepsy.github.io/data/QuitAttempts.csv")
```

`r solend()`

<div class="divider div-transparent div-dot"></div>

# Exercises 

## Study & Analysis Plan Overview 

`r qbegin(1)`

Examine the dataset, and perform any necessary and appropriate data management steps.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#look at structure of data:
str(smoke)

#check for NAs - there are none - all FALSE:
table(is.na(smoke))

#re-name variables to improve clarity:
smoke <- smoke %>%
    rename(PID = S,
           Quit_Attempt = Q,
           Intention = I)

#re-assign categorical IVs as factors, and give more appropriate labels to each level:
smoke$Intention <- factor(smoke$Intention,
                              levels = c(1,2,3,4),
                              labels = c("Never", "Maybe (not in next 6 months)", "Yes (within next 6 months)", "Yes (within next 30 days)"))

```

`r solend()`

<div class="divider div-transparent div-dot"></div>

## Descriptive Statistics & Visualisations

`r qbegin(2)`

Provide a table of descriptive statistics and visualise your data. 
 
Remember to interpret these in the context of the study.

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

1. For your table of descriptive statistics, since we have two categorical variables, the `select()` and `table()` functions will come in handy here.
2. Recall that when visualising a continuous outcome across several groups, `geom_boxplot()` may be most appropriate to use.
3. For your visualisations, you will need to specify `as_factor()` when plotting the `Quit_Attempt` variable since this is numeric, but we want it to be treated as a factor **only** for plotting purposes
4. Make sure to comment on any observed differences among the sample means of the four intention conditions.

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

::: {.panel-tabset}

## Numeric

Let's first produce a descriptive statistics table:

```{r message=FALSE, warning=FALSE}
#| label: tbl-cog-descript
#| tbl-cap: Descriptive Statistics
smoke_stats <- smoke %>%
    select(Intention, Quit_Attempt) %>%
    table() %>%
    kable(caption = "Descriptive Statistics") %>%
    kable_styling()

smoke_stats
```

Or alternatively we could view as proportions: 

```{r message=FALSE, warning=FALSE}
#| label: tbl-cog-prop
#| tbl-cap: Proportions
smoke_prop <- smoke %>%
  group_by(Intention, Quit_Attempt) %>%
  summarise(
    n = n()) %>%
  mutate(
    Prop = round(n/sum(n),2)
  ) %>%
    kable(caption = "Proportions") %>%
    kable_styling()

smoke_prop 
```

::: {.callout-important icon=false appearance="minimal"}

Based on the proportions presented in @tbl-cog-prop, we can see for those who had some intention to quit (i.e., maybe - not in next 6 months, yes - within next 6 months, or yes - within 30 days), there was a larger proportion of individuals who attempted to quit using tobacco products. 

:::

## Visual

We can visually explore the association between the two categorical variables as follows:

```{r}
#| label: fig-smoke-desc
#| fig-cap: "Association between Intention and Quitting Attempt"
smoke_plt1 <- ggplot(data = smoke, aes(x=as_factor(Quit_Attempt), fill=Intention)) +
  geom_bar(position = "dodge") +
  labs(fill = 'Intention to Quit', x = "Attempted Quitting (0 = No, 1 = Yes)")
smoke_plt1
```

::: {.callout-important icon=false appearance="minimal"}

From @fig-smoke-desc, we can see that for those who made an attempt to quit using tobacco products, the majority intended to quit - either in the immediate or distant future. For those who made no attempt to quit using tobacco products, the majority either had no intention of quitting or did not plan to quit in the near future. 

:::

:::

`r solend()`

<div class="divider div-transparent div-dot"></div>

## Model Fitting & Interpretation 

`r qbegin(3)`

Fit your model using `glm()`, and assign it as an object with the name "smoke_mdl1".   

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
smoke_mdl1 <- glm(Quit_Attempt ~ Intention, data = smoke, family = "binomial")
summary(smoke_mdl1)
```

`r solend()`

<br>

`r qbegin(4)`

Interpret your coefficients in the context of the study. When doing so, it may be useful to translate the log-odds back into odds.

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

The opposite of the natural logarithm is the exponential (see here for more details if you are interested), and in R these functions are `log()` and `exp()`.

Recall that we can obtain our parameter estimates using various functions such as `summary()`,`coef()`, `coefficients()`, etc. Thus, we want to exponentiate the coefficients from our model in order to translate them back from log-odds.

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
exp(coefficients(smoke_mdl1))
```

+ $\beta_0$ = `(Intercept)` = `r round(exp(coef(smoke_mdl1))[1],2)`
    - For a participant who reported that they “never intend to quit", the probability that they did attempt quitting was 0.14 times the probability that they did not.

+ $\beta_1$ = `Intention Maybe (not in next 6 months)` = `r round(exp(coef(smoke_mdl1))[2],2)`
    - Relative to those who "never intend to quit", reporting an "intention to quit but not in the next 6 months" meant that an individuals odds of attempting to quit increased by a factor of 13.2.
    
+ $\beta_2$ = `Intention Yes (within next 6 months)` = `r round(exp(coef(smoke_mdl1))[3],2)`
    - Relative to those who "never intend to quit", reporting an "intention to quit in the next 6 months" increased the odds of attempting to quit by a factor of 25.2.

+ $\beta_3$ `Intention Yes (within next 30 days)` = `r round(exp(coef(smoke_mdl1))[4],2)`
    - Relative to those who "never intend to quit", reporting an "intention to quit in the next 30 days" was associated with an increase in the odds of attempting to quit by a factor of 28.

`r solend()`

<div class="divider div-transparent div-dot"></div>

## Model Fit

`r qbegin(5)`

Examine the below plot to determine if the deviance residuals raise concerns about outliers: 

```{r}
plot(rstandard(smoke_mdl1, type = 'deviance'), ylab = 'Standardised Deviance Residuals')
```

Based on this plot, are there any residuals of concern? Are there any additional plots you could check to determine if there are influential observations?

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

*Deviance Residuals* 

Because logistic regression models don't have the same expected error distribution (we don't expect residuals to be normally distributed around the mean, with constant variance), checking the assumptions of logistic regression is a little different.  

Typically, we look at the "deviance residuals". But we __don't__ examine plots for patterns, we simply examine them for potentially outlying observations. If we use a standardised residual, it makes it easier to explore extreme values as we expect most residuals to be within -2, 2 or -3, 3 (depending on how strict we feel).  

*Cook's Distance*

To check for influential observations, we can use `cooks.distance()`, and plot this using `plot()`. Alternatively, you can specify `which = 4` when plotting your fitted model. In logistic regression, we can use the arbitrary cut-offs of 0.5 (moderately influential) or 1 (highly influential) to describe influential points. 

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

In the plot above, there appears to be 1 residual with a value >|2|, but none with a value >|3|. We will keep this in mind and check if they are also an influential point by plotting Cook's Distance:

```{r}
#cooks d - option 1 (only need to use one of these two options)
plot(cooks.distance(smoke_mdl1), ylab = "Cook's Distance")

#cooks d - option 2 (only need to use one of these two options)
plot(smoke_mdl1, which = 4)
```

There doesn’t appear to be any influential observations based on our Cook's distance plot, since all values < .50.

`r solend()`

<br>

`r qbegin(6)`

Perform a Deviance goodness-of-fit test to compare your fitted model to the null. 

$$
\begin{aligned}
M_0 &: \qquad \log \left( \frac{p}{1 - p}\right) ~=~ \beta_0 \\
M_1 &: \qquad \log \left( \frac{p}{1 - p}\right) ~=~ \beta_0 + \beta_1 \cdot Intention_2 + \beta_2 \cdot Intention_3 + \beta_3 \cdot Intention_4
\end{aligned}
$$

Report the results of the model comparison in APA format, and state which model you think best fits the data.

:::{.callout-tip appearance="simple" collapse="true"}

### Hint 

Consider whether or not your models are nested. The flowchart in [Semester 1 Week 4 Lab, Q10](https://uoepsy.github.io/dapr2/2324/labs/1_04_model_fit_comp.html) may be helpful to revisit. 

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

First, let's fit the null model:

```{r}
smoke_mdl0 <- glm(Quit_Attempt ~ 1, data = smoke, family = "binomial")
summary(smoke_mdl0)
```

Since our models are nested, we can compare using the likelihood ratio test:

```{r}
anova(smoke_mdl0, smoke_mdl1, test = 'Chisq')
```

::: {.callout-important icon=false appearance="minimal"}

At the 5% significance level, the addition of information about the participants’ intention to quit resulted in a significant decrease in model deviance $\chi^2(3) = 11.99, p = .007$.

Hence, we have strong evidence that the model the subjects’ intention to quit is a helpful predictor of whether or not they will attempt quitting in the future.

:::

`r solend()`

<br>

`r qbegin(7)`

Check the AIC and BIC values for smoke_mdl0 and smoke_mdl1 - which model should we prefer?

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

::: {.panel-tabset}

## AIC   
```{r}
#AIC
AIC(smoke_mdl0, smoke_mdl1)
```

## BIC 
```{r}
#BIC
BIC(smoke_mdl0, smoke_mdl1)
```

:::

::: {.callout-important icon=false appearance="minimal"}

We used AIC and BIC model selection to distinguish between two possible models describing the association between attempting to quit and intentions. Our model with with intentions included as a predictor (AIC = 76.66) was better fitting than the null model (AIC = 82.65). However, the BIC values suggested that the model including intentions (BIC = 85.17) was a poorer fit than the null (BIC = 84.77). Based on the weight of evidence from both the Deviance goodness-of-fit test alongside the AIC and BIC values, we would conclude that the model with intentions was better fitting than the null.

:::

`r solend()`

<div class="divider div-transparent div-dot"></div>

## Visualise Model

`r qbegin(8)`

Plot the following:

+ predicted model estimates
+ predicted probability

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

Here you will need to use `plot_model()` from the **sjPlot** package. To get your estimates, you will need to specify `type = "est"`, and for predicted probability, `type = "eff"`. 

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

::: {.panel-tabset}

## Predicted model estimates

`plot_model()` with `type = "est"` gives a nice way of visualising the model odds ratios and confidence intervals: 

```{r}
#| label: fig-smoke-modest
#| fig-cap: Model Estimates
plot_model(smoke_mdl1,
           type = "est")
```

## Predicted probability

`plot_model()` with `type = "eff"` allows us to visualise the predicted probability based on our model estimates: 

```{r}
#| label: fig-smoke-predprob
#| fig-cap: Predicted Probability
plot_model(smoke_mdl1,
           type = "eff")
```

:::

`r solend()`

<div class="divider div-transparent div-dot"></div>

## Writing Up & Presenting Results

`r qbegin(9)`

Provide key model results in a formatted table.

:::{.callout-tip appearance="simple" collapse="true"}

### Hint 

Use `tab_model()` from the __sjPlot__ package. 

Remember that you can rename your DV and IV labels by specifying `dv.labels` and `pred.labels`.

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#| label: tbl-smoke-modresults
#| tbl-cap: Regression table for Smoking Model
#create table for results
tab_model(smoke_mdl1,
          dv.labels = "Attempt to quit using tobacco products",
          pred.labels = c("Maybe (not in next 6 months)" = "Intend to quit but not in the next 6 months",
                          "Yes (within next 6 months)" = "Intend to quit in the next 6 months",
                          "Yes (within next 30 days)" = "Intend to quit in the next 30 days"),
          title = "Regression table for Smoking Model")
```

`r solend()`

<br>

`r qbegin(10)`

Interpret your results in the context of the research question and report your model in full.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

::: {.callout-important icon=false appearance="minimal"}


```{r}
#| include: false
res <- exp(car::Confint(smoke_mdl1))
res <- round(res,2)
```


Whether or not participants made an attempt to quit using tobacco products (binary 0 vs 1; 0 no attempt to quit, 1 attempted to quit) was modeled using logistic regression, with intention to quit ('never intend to quit', 'may intend to quit but not in the next 6 months', 'intend to quit in the next 6 months', 'intend to quit in the next 30 days', with 'never intend to quit' as the reference level) as the only predictor. See @tbl-smoke-modresults for full model results, and @fig-smoke-modest for a visualisation of the model estimates and confidence intervals.

Having no intention to quit was found to be associated with attempting to quit ($OR = `r res[1,1]`,\,\, 95\%\, CI\, [`r paste(res[1,2:3],collapse=", ")`]$), where the probability that they did attempt to quit was 0.14 times the probability that they did not. 

Relative to those who never intend to quit, individuals who may intend to quit but not in the next six months had increased odds of attempting to quit ($OR = `r res[2,1]`,\,\, 95\%\, CI\, [`r paste(res[2,2:3],collapse=", ")`]$). 

In comparison to those with no intention to quit, those who intended to quit in the next six months had their the odds of quitting increased by a factor of `r res[3,1]` ($95\%\, CI\, [`r paste(res[3,2:3],collapse=", ")`]$)

Finally, intending to quit in the next 30 days was associated with an increase in the odds of attempting to quit by a factor of `r res[4,1]` ($95\%\, CI\, [`r paste(res[4,2:3],collapse=", ")`]$) in comparison to those who never intended to quit.

In summary, the closer in the future someone intended to quit smoking, the higher their odds of attempting to quit using tobacco products (see @fig-smoke-predprob).

:::

`r solend()`

<div class="divider div-transparent div-dot"></div>

# Compile Report

`r qbegin("Compile Report", qlabel = FALSE)`  

Knit your report to PDF, and check over your work. To do so, you should make sure:

- Only the output you want your reader to see is visible (e.g., do you want to hide your code?)
- Check that the **tinytex** package is installed
- Ensure that the ‘yaml’ (bit at the very top of your document) looks something like this:

```{}
---
title: "this is my report title"
author: "B1234506"
date: "07/09/2024"
output: bookdown::pdf_document2
---
```

:::{.callout-tip appearance="simple" collapse="true"}
# What to do if you cannot knit to PDF
If you are having issues knitting directly to PDF, try the following:  

- Knit to HTML file  
- Open your HTML in a web-browser (e.g. Chrome, Firefox)  
- Print to PDF (Ctrl+P, then choose to save to PDF)  
- Open file to check formatting
:::

:::{.callout-tip appearance="simple" collapse="true"}
# Hiding Code and/or Output

:::{.panel-tabset}
## Hiding R Code

To not show the code of an R code chunk, and only show the output, write:

````
```{{r, echo=FALSE}}
# code goes here
```
````

## Hiding R Output

To show the code of an R code chunk, but hide the output, write:

````
```{{r, results='hide'}}
# code goes here
```
````

## Hiding R Code and Output

To hide both code and output of an R code chunk, write:

````
```{{r, include=FALSE}}
# code goes here
```
````
:::

:::

:::{.callout-tip appearance="simple" collapse="true"}

### Tinytex
You must make sure you have **tinytex** installed in R so that you can “Knit” your Rmd document to a PDF file:

```{r eval = FALSE}
install.packages("tinytex")
tinytex::install_tinytex()
```

:::

`r qend()`

`r solbegin(show = params$SHOW_SOLS, toggle = params$TOGGLE)`

You should end up with a PDF file. If you have followed the above instructions and still have issues with knitting, speak with a Tutor. 

`r solend()`
