---
title: "More Logistic Regression"
link-citations: yes
params: 
    SHOW_SOLS: TRUE
    TOGGLE: TRUE
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
source('assets/setup.R')

set.seed(953)

library(DT)
library(pander)
library(sjPlot)
library(tidyverse)
library(car)

```

:::lo

### <i class="fa fa-graduation-cap"></i> Learning Objectives
At the end of this lab, you will:

1. Understand when to use a logistic model
2. Understand how to fit and interpret a logistic model
3. Understand how to evaluate model fit

### <i class="fa fa-check-square-o fa-2"></i> What You Need

1. Be up to date with lectures
2. Have completed previous lab exercises from [Week 6](https://uoepsy.github.io/dapr2/2223/labs/2_06_glm1.html)

### <i class="fab fa-r-project"></i> Required R Packages
Remember to load all packages within a code chunk at the start of your RMarkdown file using `library()`. If you do not have a package and need to install, do so within the console using `install.packages(" ")`. For further guidance on installing/updating packages, see Section C [here](https://uoepsy.github.io/files/install-update-r#update-pkgs). 

For this lab, you will need to load the following package(s):

* **tidyverse** 
* **patchwork**
* **kableExtra**
* **psych**
* **sjPlot**

### <i class="fa fa-file"></i> Lab Data
You can download the data required for this lab [here](https://uoepsy.github.io/data/QuitAttempts.csv) or read it in via this link https://uoepsy.github.io/data/QuitAttempts.csv. 

:::


# Study Overview

> **Research Question**
>
> Is attempting to quit tobacco products associated with an individuals intentions?

`r optbegin("Smoking Codebook", olabel=FALSE, toggle=params$TOGGLE)` 

__Description__

Kalkhoran et al. (2015)[^1] investigated predictors of dual use of cigarettes and smokeless tobacco products. Although their original sample size was large ($n$ = 1324), they were interested in running separate logistic regression analyses within subgroups. Most of the sample used only cigarettes. One of the smaller subgroups contained subjects who used both cigarettes and smokeless tobacco products ($n$=61). For this problem, we focus on this smaller subgroup of dual cigarette and smokeless tobacco users.

__Data Dictionary__
```{r echo=FALSE, message=FALSE, warning=FALSE}
smoke <- read_csv("https://uoepsy.github.io/data/QuitAttempts.csv")
tibble(
variable = names(smoke),
description = c("Subject","Quit Attempt, Wheter the subject made an attempt to quit using tobacco products (0 = no attempt to quit; 1 = attempted to quit).", "Intention to Quit, with four levels: 1 = Never intend to quit; 2 = May intend to quit but not in the next 6 months; 3 = Intend to quit in the next 6 months; 4 = Intend to quit in the next 30 days")
) %>% gt::gt()
```

__Preview__

The first six rows of the data are:

```{r echo=FALSE, message=FALSE}
read_csv('https://uoepsy.github.io/data/QuitAttempts.csv') %>% head %>% gt::gt()
```

`r optend()`

# Setup

`r qbegin("Setup", qlabel = FALSE)`  

1. Create a new RMarkdown file
2. Load the required package(s)
3. Read in the QuitAttempts dataset into R, assigning it to an object named `smoke` 
 
`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r message=FALSE}
#load packages
library(tidyverse)
library(psych)
library(kableExtra)
library(patchwork)
library(sjPlot)

#read in data
smoke <- read_csv("https://uoepsy.github.io/data/QuitAttempts.csv")
```

`r solend()`

<br>

`r qbegin(1)`

Examine the dataset, and perform any necessary and appropriate data management steps.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#look at structure of data:
str(smoke)

#check for NAs - there are none - all FALSE:
table(is.na(smoke))

#re-name variables to improve clarity:
smoke <- smoke %>%
    rename(PID = S,
           Quit_Attempt = Q,
           Intention = I)

#designate intention as a factor:
smoke$Intention <- as_factor(smoke$Intention)

```

`r solend()`

<br>

`r qbegin(2)`

Provide a table of descriptive statistics and visualise your data.

Remember to interpret your plot in the context of the study. 

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

1. For your table of descriptive statistics, both the `group_by()` and `summarise()` functions will come in handy here.
2. Recall that when visualising a continuous outcome across several groups, `geom_boxplot()` may be most appropriate to use.
3. Make sure to comment on any observed differences among the sample means of the four treatment conditions.

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

Let's first produce a descriptive statistics table:

```{r message=FALSE, warning=FALSE}
#| label: tbl-cog-descript
#| tbl-cap: Descriptive Statistics
smoke_stats <- smoke %>%
    select(Intention, Quit_Attempt) %>%
    table() %>%
    kable(caption = "Descriptive Statistics") %>%
    kable_styling()

smoke_stats
```

Or view as proportions: 
```{r}
smoke %>%
  group_by(Intention, Quit_Attempt) %>%
  summarise(
    n = n()) %>%
  mutate(
    Prop = round(n/sum(n),2)
  )
```

We can explore the association between the two categorical variables as follows:

```{r}
#| label: fig-smoke-desc
#| fig-cap: "Association between Intention and Quitting Attempt"
smoke_plt1 <- ggplot(data = smoke, aes(x=as_factor(Quit_Attempt), fill=Intention)) +
  geom_bar(position = "dodge") +
  labs(fill = 'Intention', xlab = "Attempted Quitting?")
smoke_plt1
```

`r solend()`

<br>

`r qbegin(3)`

Fit your model using `glm()`, and assign it as an object with the name "smoke_mdl1".   

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
smoke_mdl1 <- glm(Quit_Attempt ~ Intention, data = smoke, family = "binomial")
summary(smoke_mdl1)
```

`r solend()`

<br>

`r qbegin(4)`

Interpret your coefficients in the context of the study. When doing so, it may be useful to translate the log-odds back into odds.

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

The opposite of the natural logarithm is the exponential (see here for more details if you are interested), and in R these functions are `log()` and `exp()`.

Recall that we can obtain our parameter estimates using various functions such as `summary()`,`coef()`, `coefficients()`, etc. Thus, we want to exponentiate the coefficients from our model in order to translate them back from log-odds.

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`


```{r}
exp(coefficients(smoke_mdl1))
```

+ $\beta_0$ = `(Intercept)` = `r round(coef(smoke_mdl1)[1],2)`
    - For a participant who reported that they â€œnever intend to quit", the probability that they did not attempt quitting was 0.14 times the probability that they did.

+ $\beta_1$ = `Intention2` = `r round(coef(smoke_mdl1)[2],2)`
    - Relative to those who "never intend to quit", reporting an "intention to quit but not in the next 6 months" meant that an individuals odds of attempting to quit increased by a factor of 13.2.
    
+ $\beta_2$ = `Intention3` = `r round(coef(smoke_mdl1)[3],2)`
    - Relative to those who "never intend to quit", reporting an "intention to quit in the next 6 months" increased the odds of attempting to quit by a factor of 25.2.

+ $\beta_3$ `Intention4` = `r round(coef(smoke_mdl1)[4],2)`
    - Relative to those who "never intend to quit", reporting an "intention to quit in the next 30 days" was associated with an increase in the odds of attempting to quit by a factor of 28.

`r solend()`

<br>

`r qbegin(5)`

Investigate whether or not:

+ the deviance residuals raise any concerns about outliers
+ there are influential observations

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

*Deviance Residuals* 
Because logistic regression models don't have the same expected error distribution (we don't expect residuals to be normally distributed around the mean, with constant variance), checking the assumptions of logistic regression is a little different.  

Typically, we look at the "deviance residuals". But we __don't__ examine plots for patterns, we simply examine them for potentially outlying observations. If we use a standardised residual, it makes it easier to explore extreme values as we expect most residuals to be within -2, 2 or -3, 3 (depending on how strict we feel).  

There are three ways we can get out deviance residuals, each scaled differently:

- $i$th residual = measure of deviance contributed from the $i$th observation
- $i$th standardized residual = residual / SD(residual)
- $i$th studentized residual = residual / SD(residual from model fitted without observation $i$)

We get these in `R` using:  
```{r, eval=FALSE}
# deviance residuals
residuals(mdl, type = 'deviance')
# studentised residuals
rstudent(mdl, type = 'deviance')
# standardised residuals
rstandard(mdl, type = 'deviance')
```

We can check whether any residuals are larger than 2 or 3 in absolute value by plotting these values, for example:
```{r, eval=FALSE}
plot(rstudent(mdl, type = 'deviance'), ylab = 'Studentized Deviance Residuals')
```

_*Warning:* Don't inspect this plot for patterns!_  

*Cook's Distance*
To check for influential observations, we can use `cooks.distance()`, and plot this using `plot()`. 

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

::: {.panel-tabset}

## Outliers - studentized Pearson Residuals against their index
```{r}
plot(rstudent(smoke_mdl1), ylab = "Studentized Deviance Residuals")
```

## Outliers - studentized  Pearson residuals against the fitted values

```{r}
plot(fitted(smoke_mdl1), rstudent(smoke_mdl1),
     xlab = "Fitted values", ylab = "Studentized Deviance Residuals")
```

## Influential Observations
```{r}
plot(cooks.distance(smoke_mdl1), ylab = "Cook's Distance")
plot(smoke_mdl1, which = 4)
```

:::

`r solend()`

<br>

`r qbegin(6)`

Perform a Deviance goodness-of-fit test to compare your fitted model to the null. 

$$
\begin{aligned}
M_0 &: \qquad \log \left( \frac{p}{1 - p}\right) = \beta_0 \\
M_1 &: \qquad \log \left( \frac{p}{1 - p}\right) = \beta_0 + \beta_1 Intention2 + \beta_2 Intention3 + \beta_3 Intention4
\end{aligned}
$$

Report which model you think best fits the data.

:::{.callout-tip appearance="simple" collapse="true"}

### Hint 

Consider whether or not your models are nested. The flowchart in [Question 10 of the Semester 2 Week 1 lab](https://uoepsy.github.io/dapr2/2223/labs/2_01_model_comps.html) may be helpful to revisit. 

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

First, let's fit the null model:
```{r}
smoke_mdl0 <- glm(Quit_Attempt ~ 1, data = smoke, family = "binomial")
summary(smoke_mdl0)
```

Since our models are nested, we can compare using the likelihood ratio test:
```{r}
anova(smoke_mdl0, smoke_mdl1, test = 'Chisq')
```

::: {.callout-important icon=false appearance="minimal"}

At the 5% significance level, the addition of information about the participantsâ€™ intention to quit resulted in a significant decrease in model deviance $\chi^2(3) = 11.99, p = .007$.

Hence, we have strong evidence that the model the subjectsâ€™ intention to quit is a helpful predictor of whether or not they will attempt quitting in the future.

:::

`r solend()`

<br>

`r qbegin(7)`

Check the AIC and BIC values for smoke_mdl0 and smoke_mdl1 - which model should we prefer?

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#AIC
AIC(smoke_mdl0, smoke_mdl1)

#BIC
BIC(smoke_mdl0, smoke_mdl1)
```

::: {.callout-important icon=false appearance="minimal"}

We used AIC and BIC model selection to distinguish between two possible models describing the association between attempting to quit and intentions. Our model with with intentions included as a predictor (AIC = 76.66) was better fitting than the null model (AIC = 82.65). However, the BIC values suggested that the model including intentions (BIC = 85.17) was a poorer fit than the null (BIC = 84.77). Based on the weight of evidence from both the Deviance goodness-of-fit test alongside the AIC and BIC values, we would conclude that the model with intentions was better fitting than the null.

:::

`r solend()`

<br>

`r qbegin(8)`

Plot the predicted model estimates. 

:::{.callout-tip appearance="simple" collapse="true"}

### Hint

Here you will need to use `plot_model()` from the __sjPlot__ package like you did back in Semester 1. To get your estimates, you will need to specify `type = "est"`. 

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

`plot_model()` with `type = "est"` gives a nice way of visualising the model odds ratios and confidence intervals: 

```{r}
#| label: fig-smoke-modest
#| fig-cap: Model Estimates
plot_model(smoke_mdl1,
           type = "est")
```

`r solend()`

<br>

`r qbegin(9)`

Provide key model results in a formatted table.

:::{.callout-tip appearance="simple" collapse="true"}

### Hint 

Use `tab_model()` from the __sjPlot__ package. 

Remember that you can rename your DV and IV labels by specifying `dv.labels` and `pred.labels`.

:::

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#| label: tbl-smoke-modresults
#| tbl-cap: Regression table for Smoking Model
#create table for results
tab_model(smoke_mdl1,
          dv.labels = "Attempt to quit using tobacco products",
          pred.labels = c("Intention2" = "Intend to quit but not in the next 6 months",
                          "Intention3" = "Intend to quit in the next 6 months",
                          "Intention4" = "Intend to quit in the next 30 days"),
          title = "Regression table for Smoking Model")
```

`r solend()`

<br>

`r qbegin(10)`

Interpret your results in the context of the research question and report your model in full.

`r qend()`

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

Make sure to write your results up following [APA guidelines](https://apastyle.apa.org/instructional-aids/numbers-statistics-guide.pdf):

::: {.callout-important icon=false appearance="minimal"}


```{r}
#| include: false
res <- exp(car::Confint(smoke_mdl1))
res <- round(res,2)
```

Whether or not participants made an attempt to quit using tobacco products (binary 0 vs 1; 0 no attempt to quit, 1 attempted to quit) was modeled using logistic regression, with intention to quit ('never intend to quit', 'may intend to quit but not in the next 6 months', 'intend to quit in the next 6 months', 'intend to quit in the next 30 days', with 'never intend to quit' as the reference level) as the only predictor. See @tbl-smoke-modresults for full model results, and @fig-smoke-modest for a visualisation of the model estimates and confidence intervals.

Having no intention to quit was found to be associated with attempting to quit ($OR = `r res[1,1]`,\,\, 95\%\, CI\, [`r paste(res[1,2:3],collapse=", ")`]$), where the probability that they did not attempt to quit was 0.14 times the probability that they did. 

Relative to those who never intend to quit, individuals who may intend to quit but not in the next six months had increased odds of attempting to quit ($OR = `r res[2,1]`,\,\, 95\%\, CI\, [`r paste(res[2,2:3],collapse=", ")`]$). 

In comparison to those with no intention to quit, those who intended to quit in the next six months had their the odds of quitting increased by a factor of `r res[3,1]` ($95\%\, CI\, [`r paste(res[3,2:3],collapse=", ")`]$)

Finally, intending to quit in the next 30 days was associated with an increase in the odds of attempting to quit by a factor of `r res[4,1]` ($[`r paste(res[4,2:3],collapse=", ")`]$) in comparison to those who never intended to quit.

In summary, the closer in the future someone intended to quit smoking, the higher their odds of attempting to quit using tobacco topics.

:::

`r solend()`